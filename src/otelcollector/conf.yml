receivers:
  otlp:
    protocols:
      grpc:
      http:
  hostmetrics:
    collection_interval: 30s
    scrapers:
      cpu:
      memory:
processors:
  batch: {}
  memory_limiter:
    check_interval: 5s
    limit_percentage: 80
    spike_limit_percentage: 25
  resourcedetection/env:
    detectors:
    - system
    - env
    override: false
    timeout: 2s
exporters:
  coralogix:
    # The Coralogix traces ingress endpoint
    traces:
      endpoint: "otel-traces.coralogix.com:443"
    metrics:
      endpoint: "otel-metrics.coralogix.com:443"
    logs:
      endpoint: "otel-logs.coralogix.com:443"

    # Your Coralogix private key is sensitive
    private_key: "$CORALOGIX_PRIVATE_KEY"

    # (Optional) Ordered list of Resource attributes that are used for Coralogix
    # AppName and SubSystem values. The first non-empty Resource attribute is used.
    # Example: application_name_attributes: ["k8s.namespace.name", "service.namespace"]
    # Example: subsystem_name_attributes: ["k8s.deployment.name", "k8s.daemonset.name", "service.name"]
    application_name_attributes:
    - "service.namespace"
    subsystem_name_attributes:
    - "service.name"

    # Traces, Metrics and Logs emitted by this OpenTelemetry exporter 
    # are tagged in Coralogix with the default application and subsystem constants.
    application_name: "MyBusinessEnvironment"
    subsystem_name: "MyBusinessSystem"

    # (Optional) Timeout is the timeout for every attempt to send data to the backend.
    timeout: 30s
service:
  pipelines:
    traces:
      receivers: [otlp]
      processors: [batch, memory_limiter]
      exporters: [coralogix]
    metrics:
      receivers: [otlp, hostmetrics]
      processors: [batch, memory_limiter, resourcedetection/env]
      exporters: [coralogix]
    logs:
      receivers: [otlp]
      processors: [batch]
      exporters: [coralogix]
  telemetry:
    metrics:
      address: localhost:8888
